package com.sist.di;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Qualifier;
import org.springframework.context.ApplicationContext;
import org.springframework.context.support.ClassPathXmlApplicationContext;
import org.springframework.stereotype.Component;

// 일반 클래스 => id가 없는 경우에는 자동으로 ID 배정 => mainClass
@Component
public class MainClass {
	// DI ==> 객체 주소를 얻어서 사용
	@Autowired // 스프링에서 자동으로 찾아서 주입
	private Sawon sa;
	
	@Autowired// 자동주입 => 같은객체가 여러개 있는 경우 처리가 안된다.
							// ------- 상속, 인터페이스 상속
							// 상위 : 자신, 사위 데이터
		
// 	 XML <bean> = getBean()
//	 XML을 이용하지 않고 어노테이션으로 처리
//	 XML + Annotation
//	----------------- 일반적으로 사용
//	XML은 공통으로 사용되는 (라이브러리) => MyBatis, ViewResolver
//											MultipartResolver
//	사용자 정의 => Annotation
	
	@Qualifier("mi1")
	private Member m;
	public static void main(String[] args) {
		ApplicationContext app = 
				new ClassPathXmlApplicationContext("app.xml");
		MainClass mc = (MainClass)app.getBean("mainClass");
		System.out.println("이름: "+mc.sa.getName());
		System.out.println("부서: "+mc.sa.getDept());
		System.out.println("직위: "+mc.sa.getJob());
		
		mc.m.disply();
	}

}
